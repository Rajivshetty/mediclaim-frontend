{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin/admin-approval/admin-approval.component.css","webpack:///./src/app/admin/admin-approval/admin-approval.component.html","webpack:///./src/app/admin/admin-approval/admin-approval.component.ts","webpack:///./src/app/admin/admin-login/admin-login.component.css","webpack:///./src/app/admin/admin-login/admin-login.component.html","webpack:///./src/app/admin/admin-login/admin-login.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/claim-data.service.ts","webpack:///./src/app/claim/claim.component.css","webpack:///./src/app/claim/claim.component.html","webpack:///./src/app/claim/claim.component.ts","webpack:///./src/app/claimstatus/claimstatus.component.css","webpack:///./src/app/claimstatus/claimstatus.component.html","webpack:///./src/app/claimstatus/claimstatus.component.ts","webpack:///./src/app/common/alerts/alerts.component.css","webpack:///./src/app/common/alerts/alerts.component.html","webpack:///./src/app/common/alerts/alerts.component.ts","webpack:///./src/app/common/footer/footer.component.css","webpack:///./src/app/common/footer/footer.component.html","webpack:///./src/app/common/footer/footer.component.ts","webpack:///./src/app/common/header/header.component.css","webpack:///./src/app/common/header/header.component.html","webpack:///./src/app/common/header/header.component.ts","webpack:///./src/app/registerclaim/registerclaim.component.css","webpack:///./src/app/registerclaim/registerclaim.component.html","webpack:///./src/app/registerclaim/registerclaim.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FkbWluLWFwcHJvdmFsL2FkbWluLWFwcHJvdmFsLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<!--Admin approval section start-->\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-2\\\">\\n      <div class=\\\"card\\\" style=\\\"width:200px; height: 400px;\\\">\\n        <img class=\\\"card-img-top\\\" src=\\\"../../../assets/img/user.jfif\\\" alt=\\\"Card image\\\" style=\\\"width:100%\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"col-sm-10\\\">\\n      <div class=\\\"container\\\">\\n        <h4>Customer Claim Details</h4>\\n        <table class=\\\"table table-bordered table-dark table-striped\\\">\\n          <thead>\\n            <tr>\\n              <th>Patient Name</th>\\n              <th>Diseas Name</th>\\n              <th>Limit Amount</th>\\n              <th>Admission Date</th>\\n              <th>Discharge Date</th>\\n              <th>Claim Amount</th>\\n              <th colspan=\\\"2\\\" style=\\\"text-align: center;\\\">Actions</th>\\n              <th>Comments</th>\\n              <th>Status</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let claimDetail of claimDetails\\\">\\n              <td>{{claimDetail.patientName}}</td>\\n              <td>{{claimDetail.diseaseName}}</td>\\n              <td>{{claimDetail.limitAmount}}</td>\\n              <td>{{claimDetail.admissionDate}}</td>\\n              <td>{{claimDetail.dischargedDate}}</td>\\n              <td>{{claimDetail.claimAmount}}</td>\\n              <td><button type=\\\"button\\\" (click)=\\\"approvalStatus('APPROVED', claimDetail.claimId)\\\"\\n                  class=\\\"btn btn-primary\\\">Approve</button>\\n              </td>\\n              <td><button type=\\\"button\\\" (click)=\\\"approvalStatus('REJECTED', claimDetail.claimId)\\\"\\n                  class=\\\"btn btn-primary\\\">Reject</button>\\n              </td>\\n              <!-- <td><button type=\\\"button\\\" (click)=\\\"approvalStatus('APPROVED')\\\" class=\\\"btn btn-primary\\\">Refer Back</button></td> -->\\n              <td><textarea [(ngModel)]=\\\"approverComment\\\" class=\\\"form-control\\\" rows=\\\"2\\\" id=\\\"comment\\\"></textarea></td>\\n              <td>{{claimDetail.apprStatus}}</td>\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<!--Admin approval section end-->\"","import { Component, OnInit } from '@angular/core';\nimport { ClaimDataService } from '../../claim-data.service';\n\n@Component({\n  selector: 'app-admin-approval',\n  templateUrl: './admin-approval.component.html',\n  styleUrls: ['./admin-approval.component.css']\n})\nexport class AdminApprovalComponent implements OnInit {\n\n  claimDetails: any;\n  approverComment: String;\n  constructor(private claimDataService: ClaimDataService) { }\n\n  ngOnInit() {\n    this.claimApprovalDetails(2);\n  }\n\n  /* Customer claim details method start */\n  claimApprovalDetails(id) {\n    console.log('Admin Data', id);\n    this.claimDataService.claimApprover(id)\n      .subscribe(data => {\n        this.claimDetails = data;\n        console.log('Claim Details', this.claimDetails);\n      }, error => console.log('Error...', error));\n  }\n  /* Customer claim details method end */\n\n  approvalStatus(apprStatus, claimId) {\n    console.log('Approva Status', apprStatus, claimId);\n    // let approverId = this.claimDetails.approverId;\n    this.claimDataService.getApprovalStatus(apprStatus, this.approverComment, 2, claimId)\n      .subscribe(data => {\n        // this.claimDetails = data;\n        // console.log('Claim Details', this.claimDetails);\n        this.claimApprovalDetails(2);\n      }, error => console.log('Error...', error));\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FkbWluLWxvZ2luL2FkbWluLWxvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<!-- Container start-->\\n<div class=\\\"container py-5\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <h2 class=\\\"text-center text-white mb-4\\\">Login Form</h2>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6 mx-auto\\\">\\n\\n          <!-- Login form start -->\\n          <div class=\\\"card rounded-0\\\">\\n            <div class=\\\"card-header\\\">\\n              <h3 class=\\\"mb-0\\\">Login Here</h3>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n              <form class=\\\"form\\\" role=\\\"form\\\" [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"adminLogin(loginForm.value)\\\"\\n                autocomplete=\\\"off\\\" id=\\\"formLogin\\\" novalidate=\\\"\\\" method=\\\"POST\\\">\\n                <div class=\\\"form-group\\\"\\n                  [ngClass]=\\\"{'has-error': loginForm.get('adminName').errors && (loginForm.get('adminName').touched || loginForm.get('adminName').dirty)}\\\">\\n                  <label for=\\\"uname1\\\" for=\\\"adminName\\\">Username</label>\\n                  <input type=\\\"text\\\" formControlName=\\\"adminName\\\" class=\\\"form-control form-control-lg rounded-0\\\"\\n                    id=\\\"adminName\\\">\\n                  <span class=\\\"help-block\\\"\\n                    *ngIf=\\\"loginForm.get('adminName').errors && (loginForm.get('adminName').touched || loginForm.get('adminName').dirty)\\\">\\n                    <span style=\\\"color: red;\\\" *ngIf=\\\"loginForm.get('adminName').errors.required\\\"> Full name is\\n                      required</span>\\n                  </span>\\n                </div>\\n                <div class=\\\"form-group\\\"\\n                  [ngClass]=\\\"{'has-error': loginForm.get('adminName').errors && (loginForm.get('adminName').touched || loginForm.get('adminName').dirty)}\\\">\\n                  <label>Password</label>\\n                  <input type=\\\"password\\\" formControlName=\\\"adminPassword\\\" class=\\\"form-control form-control-lg rounded-0\\\"\\n                    autocomplete=\\\"new-password\\\">\\n                  <span class=\\\"help-block\\\"\\n                    *ngIf=\\\"loginForm.get('adminPassword').errors && (loginForm.get('adminPassword').touched || loginForm.get('adminPassword').dirty)\\\">\\n                    <span style=\\\"color: red;\\\" *ngIf=\\\"loginForm.get('adminPassword').errors.required\\\"> Password\\n                      required</span>\\n                    <span style=\\\"color: red;\\\" *ngIf=\\\"loginForm.get('adminPassword').errors.minlegth\\\"> Minimum length is\\n                      6\\n                      characters </span>\\n                  </span>\\n                </div>\\n                <button type=\\\"submit\\\" class=\\\"btn btn-success btn-lg float-right\\\" id=\\\"btnLogin\\\">Login</button>\\n              </form>\\n            </div>\\n          </div>\\n          <!-- Login form end -->\\n\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<!-- Container end-->\\n\\n<div class=\\\"alert alert-success alert-dismissible\\\" *ngIf=\\\"showAlert\\\">\\n  <strong>Success alert!</strong>\\n  <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">\\n    ×\\n  </button>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ClaimDataService } from '../../claim-data.service';\n\n@Component({\n  selector: 'app-admin-login',\n  templateUrl: './admin-login.component.html',\n  styleUrls: ['./admin-login.component.css']\n})\nexport class AdminLoginComponent implements OnInit {\n\n  adminDetails: any;\n  showAlert: boolean = false;\n\n  /* Reactive form admin login form start*/\n  loginForm = new FormGroup({\n    adminName: new FormControl('', [Validators.required]),\n    adminPassword: new FormControl('', [Validators.required, Validators.minLength(6)]),\n  });\n  /* Reactive form admin login form end*/\n\n  constructor(private claimDataService: ClaimDataService, private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  /* Admin login start */\n  adminLogin(adminCredentials) {\n    console.log('Admin Data', adminCredentials);\n    this.claimDataService.login(adminCredentials)\n      .subscribe(data => {\n        this.adminDetails = data\n        console.log('User Form Data', this.adminDetails);\n        this.showAlert = !this.showAlert;\n        if (this.loginForm.value.adminName == \"Mahesh\" && this.loginForm.value.adminPassword == \"mahesh\") {\n          alert('Logged in Successfully');\n          this.router.navigateByUrl(\"/adminApproval\");\n        } else {\n          alert('Login failed')\n        }\n      }, error => console.log('Given Details Not Matching...'));\n  }\n  /* Admin login end */\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ClaimComponent } from './claim/claim.component';\nimport { RegisterclaimComponent } from './registerclaim/registerclaim.component';\nimport { ClaimstatusComponent } from './claimstatus/claimstatus.component';\nimport { AdminLoginComponent } from './admin/admin-login/admin-login.component';\nimport { AdminApprovalComponent } from './admin/admin-approval/admin-approval.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'home', pathMatch: 'full' },\n  { path: 'claim', component: ClaimComponent },\n  { path: 'register', component: RegisterclaimComponent },\n  { path: 'status', component: ClaimstatusComponent },\n  { path: 'adminLogin', component: AdminLoginComponent },\n  { path: 'adminApproval', component: AdminApprovalComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-header></app-header>\\n<router-outlet></router-outlet>\\n<app-footer></app-footer>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'claimprocessing';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './common/header/header.component';\nimport { FooterComponent } from './common/footer/footer.component';\n\nimport { ClaimComponent } from './claim/claim.component';\nimport { RegisterclaimComponent } from './registerclaim/registerclaim.component';\nimport { ClaimstatusComponent } from './claimstatus/claimstatus.component';\nimport { AdminLoginComponent } from './admin/admin-login/admin-login.component';\nimport { AdminApprovalComponent } from './admin/admin-approval/admin-approval.component';\nimport { AlertsComponent } from './common/alerts/alerts.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    ClaimComponent,\n    RegisterclaimComponent,\n    ClaimstatusComponent,\n    AdminLoginComponent,\n    AdminApprovalComponent,\n    AlertsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport 'rxjs/add/operator/map'\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/observable/throw';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClaimDataService {\n\n  constructor(private http: HttpClient) { }\n\n  /*Claim amount service method start*/\n  claimAmount(policyDetails) {\n    console.log('Policy Details---Service', policyDetails);\n    return this.http.post('http://10.117.189.192:9093/MedicalClaim/api/policies', policyDetails);\n  }\n  /*Claim amount service method end*/\n\n  /* admin login service method start*/\n  login(adminCredentials) {\n    return this.http.post('http://10.117.189.254:9093/MedicalClaim/api/login', adminCredentials)\n    // .map((res: Response) => res.json())\n    // .catch((error: any) => Observable.throw(error.json().error || 'Server Error'));\n  }\n  /* admin login service method end*/\n\n  /*Get List of Hospitals service method start*/\n  getListOfHospitals() {\n    return this.http.get('http://10.117.189.47:9093/MedicalClaim/api/hospitals')\n  }\n  /*Get List of Hospitals service method end*/\n\n  /*Get List of Diseas service method start*/\n  getListOfDiseas() {\n    return this.http.get('http://10.117.189.47:9093/MedicalClaim/api/diseases')\n  }\n  /*Get List of Diseas service method end*/\n\n  /*Claim policy details service method start*/\n  policyClaimRegister(policyRegisterDetails) {\n    console.log('Policy Details---Service', policyRegisterDetails);\n    return this.http.post('http://10.117.189.94:9093/MedicalClaim/api/claims', policyRegisterDetails);\n  };\n  /*Claim policy details service method end*/\n\n  claimApprover(approverId) {\n    console.log('Policy Approver---Service', approverId);\n    return this.http.get('http://10.117.189.254:9093/MedicalClaim/api/approvers/' + approverId + '/claims');\n  }\n\n  getApprovalStatus(apprStatus, comment, approverId, claimId) {\n    console.log(apprStatus, approverId, comment, claimId)\n    console.log('Approval Status', apprStatus);\n    let obj = {\n      'status': apprStatus,\n      'comment': comment,\n      'claimId': claimId,\n      'approverId': approverId\n    }\n    console.log('Aprrover Object', obj);\n    return this.http.post('http://10.117.189.254:9093/MedicalClaim/api/approvers/', obj);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NsYWltL2NsYWltLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<!-- Enter Policy ID start -->\\n<div class=\\\"container-fluid h-100 bg-light text-dark\\\">\\n  <div class=\\\"row justify-content-center align-items-center\\\">\\n    <h3>Enter Your Details</h3>\\n  </div>\\n  <hr />\\n  <div class=\\\"row justify-content-center align-items-center h-100\\\">\\n    <div class=\\\"col col-sm-6 col-md-6 col-lg-4 col-xl-3\\\">\\n      <form action=\\\"\\\" [formGroup]=\\\"policyDetails\\\" (ngSubmit)=\\\"policyClaim(policyDetails.value)\\\">\\n        <div class=\\\"form-group\\\">\\n          <label>Policy Number:</label>\\n          <input type=\\\"text\\\" formControlName=\\\"policyNo\\\" class=\\\"form-control\\\" />\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label>Aadhar Number:</label>\\n          <input type=\\\"number\\\" formControlName=\\\"aadharNo\\\" class=\\\"form-control\\\" />\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label>Date Of Birth:</label>\\n          <input type=\\\"date\\\" data-date-format=\\\"YYYY/MM/DD\\\" formControlName=\\\"dob\\\" class=\\\"form-control\\\" />\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"container\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col\\\"><button class=\\\"col-6 btn btn-primary btn-sm float-right\\\">Submit</button></div>\\n            </div>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n<!-- Enter Policy ID end -->\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ClaimDataService } from '../claim-data.service';\n@Component({\n  selector: 'app-claim',\n  templateUrl: './claim.component.html',\n  styleUrls: ['./claim.component.css']\n})\nexport class ClaimComponent implements OnInit {\n\n  showAlert: boolean = false;\n  policyDetails = new FormGroup({\n    policyNo: new FormControl(''),\n    aadharNo: new FormControl('', [Validators.email, Validators.maxLength(12)]),\n    dob: new FormControl('', [Validators.required])\n  });\n\n  constructor(private router: Router, private claimDataService: ClaimDataService) { }\n\n  ngOnInit() {\n  }\n\n  /* Claim method start */\n  policyClaim(policyDetails) {\n    this.showAlert = !this.showAlert;\n    this.claimDataService.claimAmount(policyDetails).subscribe((response) => {\n      console.log('repsonse ', response);\n      this.router.navigateByUrl(\"/register\");\n    });\n  }\n  /* Claim method end */\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NsYWltc3RhdHVzL2NsYWltc3RhdHVzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p>\\n  claimstatus works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-claimstatus',\n  templateUrl: './claimstatus.component.html',\n  styleUrls: ['./claimstatus.component.css']\n})\nexport class ClaimstatusComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbW1vbi9hbGVydHMvYWxlcnRzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"alert alert-success\\\">\\n    <strong>Success!</strong> This alert box could indicate a successful or positive action.\\n  </div>\\n</div>\\n<div class=\\\"container\\\">\\n  <div class=\\\"alert alert-info\\\">\\n    <strong>Info!</strong> This alert box could indicate a neutral informative change or action.\\n  </div>\\n</div>\\n<div class=\\\"container\\\">\\n  <div class=\\\"alert alert-warning\\\">\\n    <strong>Warning!</strong> This alert box could indicate a warning that might need attention.\\n  </div>\\n</div>\\n<div class=\\\"container\\\">\\n  <div class=\\\"alert alert-danger\\\">\\n    <strong>Danger!</strong> This alert box could indicate a dangerous or potentially negative action.\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-alerts',\n  templateUrl: './alerts.component.html',\n  styleUrls: ['./alerts.component.css']\n})\nexport class AlertsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbW1vbi9mb290ZXIvZm9vdGVyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<!-- Footer start-->\\n<div class=\\\"footer navbg\\\">\\n  <p>Copyright@2020</p>\\n</div>\\n<!-- Footer end-->\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbW1vbi9oZWFkZXIvaGVhZGVyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<!-- Navigation header start-->\\n<div class=\\\"bs-example\\\">\\n  <nav class=\\\"navbar navbar-expand-md navbar-dark navbg\\\">\\n    <a href=\\\"#\\\" class=\\\"navbar-brand\\\">\\n      <img src=\\\"assets/img/logo.png\\\" style=\\\"width: 80px; height: 50px;\\\" alt=\\\"\\\">\\n    </a>\\n    <button type=\\\"button\\\" class=\\\"navbar-toggler\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarCollapse\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarCollapse\\\">\\n      <div class=\\\"navbar-nav\\\">\\n        <a href=\\\"#\\\" class=\\\"nav-item nav-link active\\\">Home</a>\\n        <a href=\\\"#\\\" routerLink=\\\"claim\\\" class=\\\"nav-item nav-link\\\" style=\\\"width:50%\\\">Claim</a>\\n        <a href=\\\"#\\\" class=\\\"nav-item nav-link\\\" routerLink=\\\"adminLogin\\\">Admin</a>\\n      </div>\\n      <form class=\\\"form-inline ml-auto\\\">\\n        <div class=\\\"navbar-nav\\\">\\n          <a href=\\\"#\\\" class=\\\"nav-item nav-link\\\" (click)=\\\"claimStatus()\\\" routerLink=\\\"/status\\\">Check Claim Status</a>\\n        </div>\\n      </form>\\n    </div>\\n  </nav>\\n</div>\\n<!-- Navigation header end-->\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVyY2xhaW0vcmVnaXN0ZXJjbGFpbS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!-- Reister Claim start-->\\n<div class=\\\"container py-5\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-10 mx-auto\\\">\\n      <h4> Enter The Details To Register Your Claim</h4>\\n      <hr>\\n      <form [formGroup]=\\\"claimDetails\\\" (ngSubmit)=\\\"policyClaimInitiate(claimDetails.value)\\\">\\n        <div class=\\\"form-group row\\\">\\n          <div class=\\\"col-sm-6\\\">\\n            <label for=\\\"inputLastname\\\">User ID</label>\\n            <input type=\\\"text\\\" formControlName=\\\"userId\\\" class=\\\"form-control\\\" id=\\\"userId\\\" placeholder=\\\"User ID\\\">\\n          </div>\\n          <div class=\\\"col-sm-6\\\">\\n            <label for=\\\"admissiondate\\\">Date of Admission</label>\\n            <input type=\\\"date\\\" data-date-format=\\\"YYYY/MM/DD\\\" formControlName=\\\"admissionDate\\\" class=\\\"form-control\\\"\\n              id=\\\"admissiondate\\\" placeholder=\\\"Admission Date\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group row\\\">\\n          <div class=\\\"col-sm-6\\\">\\n            <label for=\\\"name\\\">Patient Name</label>\\n            <input type=\\\"text\\\" formControlName=\\\"patientName\\\" class=\\\"form-control\\\" id=\\\"name\\\" placeholder=\\\"Name\\\">\\n          </div>\\n          <div class=\\\"col-sm-6\\\">\\n            <label for=\\\"discharge\\\">Discharge Date</label>\\n            <input type=\\\"date\\\" data-date-format=\\\"YYYY/MM/DD\\\" formControlName=\\\"dischargedDate\\\" class=\\\"form-control\\\"\\n              id=\\\"discharge\\\" placeholder=\\\"Discharge Date\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group row\\\">\\n          <div class=\\\"col-sm-6\\\">\\n            <label for=\\\"diagnosis\\\">Diagnosis</label>\\n            <select class=\\\"form-control\\\" formControlName=\\\"diseaseId\\\" id=\\\"diagnosis\\\">\\n              <!-- <option>1</option>\\n              <option>2</option>\\n              <option>3</option> -->\\n              <option *ngFor=\\\"let dises of diseasList\\\" [value]=\\\"dises.diseaseId\\\">{{dises.diseaseName}}</option>\\n            </select>\\n          </div>\\n          <div class=\\\"col-sm-6\\\">\\n            <label for=\\\"amount\\\">Total Claim Amount</label>\\n            <input type=\\\"number\\\" formControlName=\\\"claimAmount\\\" class=\\\"form-control\\\" id=\\\"amount\\\"\\n              placeholder=\\\"Claim Amount\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group row\\\">\\n          <div class=\\\"col-sm-6\\\">\\n            <label for=\\\"inputState\\\">Hospital Name</label>\\n            <select class=\\\"form-control\\\" formControlName=\\\"hospitalId\\\" id=\\\"hospitalId\\\">\\n              <option *ngFor=\\\"let hospitals of hospitalsListData\\\" [value]=\\\"hospitals.hospitalId\\\">\\n                {{hospitals.hospitalName}}\\n              </option>\\n            </select>\\n          </div>\\n          <!-- <div class=\\\"col-sm-6\\\">\\n            <label for=\\\"summary\\\">Upload Documents</label>\\n            <div class=\\\"custom-file\\\">\\n              <input type=\\\"file\\\" formControlName=\\\"dischargeSummary\\\" class=\\\"custom-file-input\\\" id=\\\"customFile\\\">\\n              <label class=\\\"custom-file-label\\\" for=\\\"customFile\\\">Choose file</label>\\n            </div>\\n          </div> -->\\n        </div>\\n        <div class=\\\"col-sm-6\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary px-4 float-right\\\"\\n            (click)=\\\"policyClaimInitiate(claimDetails.value)\\\">Submit</button>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n<!-- Reister Claim end-->\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ClaimDataService } from '../claim-data.service';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-registerclaim',\n  templateUrl: './registerclaim.component.html',\n  styleUrls: ['./registerclaim.component.css']\n})\nexport class RegisterclaimComponent implements OnInit {\n\n  hospitalsListData: any = [];\n  diseasList: any;\n\n  /*Reactive form to claim details start*/\n  claimDetails = new FormGroup({\n    userId: new FormControl(''),\n    patientName: new FormControl(''),\n    diseaseId: new FormControl('', [Validators.required]),\n    admissionDate: new FormControl('', [Validators.required]),\n    dischargedDate: new FormControl('', [Validators.required]),\n    hospitalId: new FormControl('', [Validators.required]),\n    claimAmount: new FormControl('', [Validators.required])\n    // dischargeSummary: new FormControl('', [Validators.required]),\n  });\n  /*Reactive form to claim details end*/\n  constructor(private claimDataService: ClaimDataService, private router: Router) { }\n\n  ngOnInit() {\n    this.getHospitalsList();\n    this.getDiseasList();\n  }\n\n  /* To get Hospital List method start*/\n  getHospitalsList() {\n    this.claimDataService.getListOfHospitals()\n      .subscribe(data => {\n        this.hospitalsListData = data;\n        console.log('hospitalsList---', this.hospitalsListData);\n      }, error => console.log('Error  getting Hospital List...'))\n\n  }\n  /* To get Hospital List method end*/\n\n  /* To get Diseas List method start*/\n  getDiseasList() {\n    this.claimDataService.getListOfDiseas()\n      .subscribe(data => {\n        this.diseasList = data\n        console.log('getDiseasList---', this.diseasList);\n      }, error => console.log('Error  getting Diseas List...'))\n\n  }\n  /* To get Diseas List method end*/\n\n  /* Policy Claim Initiate method start*/\n  policyClaimInitiate(policyRegisterDetails) {\n    console.log('claimDetails', this.claimDetails);\n    alert('Policy Register');\n    const policyDetails = {\n      \"userId\": parseInt(policyRegisterDetails.userId),\n      \"patientName\": policyRegisterDetails.patientName,\n      \"diseaseId\": parseInt(policyRegisterDetails.diseaseId),\n      \"admissionDate\": policyRegisterDetails.admissionDate,\n      \"dischargedDate\": policyRegisterDetails.dischargedDate,\n      \"hospitalId\": parseInt(policyRegisterDetails.hospitalId),\n      \"claimAmount\": policyRegisterDetails.claimAmount\n    }\n    this.claimDataService.policyClaimRegister(policyDetails).subscribe((response) => {\n      console.log('response ', response);\n      // this.router.navigateByUrl(\"/home\");\n    });\n  }\n  /* Policy Claim Initiate method end*/\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}